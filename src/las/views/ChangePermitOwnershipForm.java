/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package las.views;

import SeverConnector.Connector;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.JTextComponent;
import las.common_classes.GUIitemsValidator;
import las.common_classes.PatternChecker;
import las.controller.NominatedSuccessorController;
import las.controller.PermitController;
import las.models.Client;
import las.models.Permit;



/**
 *
 * @author Gimhani
 */
public class ChangePermitOwnershipForm extends javax.swing.JDialog {
    private Permit permit;
    private boolean fromGrant = false;
    private GrantForm grantForm;
    PermitController PermitController;
    NominatedSuccessorController NominatedSuccessorController;
    /**
     * Creates new form ChangePermitOwnershipForm
     */
    
    public ChangePermitOwnershipForm() {
        
        initComponents();
        
          try {
            Connector sConnector = Connector.getSConnector();
            PermitController=sConnector.getPermitController();
            NominatedSuccessorController=sConnector.getnomiNominatedSuccessorController();
        } catch (RemoteException | SQLException | NotBoundException | MalformedURLException|ClassNotFoundException ex) {
            Logger.getLogger(ApplicantForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        setLocationRelativeTo(null);
        setTitle("Change Permit Ownership");
        add_button.setEnabled(false);
        this.permit_number_combo.setEditable(true);
        nic_text.requestFocus();
        namenotvalidlabel.setVisible(false);
        nicInvalidLabel.setVisible(false);
        phonenumnotvalidlabel.setVisible(false);
        //occupationnotvalidlabel.setVisible(false);
        incomenotvalidlabel.setVisible(false);
        
          permit_number_combo.setEditable(true);
        JTextComponent editorGrantHaventPermit = (JTextComponent) permit_number_combo.getEditor().getEditorComponent();
        editorGrantHaventPermit.addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent e) {
                String item = (String) permit_number_combo.getEditor().getItem();
                ArrayList<Object> list = new ArrayList();
                try {

                    ArrayList<Permit> grantHaventPermit = PermitController.getGrantHaventPermit(item);
                    for (int i = 0; i < grantHaventPermit.size(); i++) {
                        list.add(grantHaventPermit.get(i).getPermitNumber());
                    }
                    GUIitemsValidator.addItemToCombo(list, permit_number_combo);

                } catch (ClassNotFoundException | SQLException |RemoteException ex) {
                    Logger.getLogger(LandForm.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        });

      
        
    }
    
    
    public ChangePermitOwnershipForm(GrantForm grant ){
        this.fromGrant=true;
        this.grantForm=grant;
        initComponents();
        this.permit=grantForm.getPermit();
        this.permit_number_combo.setSelectedItem(permit.getPermitNumber());
        this.ownerText.setText(permit.getClient().getClientName());
        this.permit_number_combo.setEditable(false);
        this.ownerText.setEditable(false);
        
        nic_text.requestFocus();
        namenotvalidlabel.setVisible(false);
        nicInvalidLabel.setVisible(false);
        phonenumnotvalidlabel.setVisible(false);
        //occupationnotvalidlabel.setVisible(false);
        incomenotvalidlabel.setVisible(false);
               
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ownerText = new javax.swing.JTextField();
        permit_number_combo = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        childrenCountPanel = new javax.swing.JPanel();
        NumberOfMarriedChildren = new javax.swing.JLabel();
        NoOfUnmarriedChildren = new javax.swing.JLabel();
        marriedChildrenCountSpinner = new javax.swing.JSpinner();
        unmarriedChildrenCountSpinner = new javax.swing.JSpinner();
        jPanel4 = new javax.swing.JPanel();
        AnnualIncome = new javax.swing.JLabel();
        annualIncomeText = new javax.swing.JTextField();
        incomenotvalidlabel = new javax.swing.JLabel();
        add_button = new javax.swing.JButton();
        cancel_button = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        nic_text = new javax.swing.JTextField();
        owner_name_text = new javax.swing.JTextField();
        telephoneText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        address_text = new javax.swing.JTextArea();
        addresslabel = new javax.swing.JLabel();
        PhoneNo = new javax.swing.JLabel();
        namelabel = new javax.swing.JLabel();
        niclabel = new javax.swing.JLabel();
        Birthday = new javax.swing.JLabel();
        Status = new javax.swing.JLabel();
        marriedStatusRButton = new javax.swing.JRadioButton();
        singleStatusRButton = new javax.swing.JRadioButton();
        Generate = new javax.swing.JButton();
        DOBText = new javax.swing.JTextField();
        phonenumnotvalidlabel = new javax.swing.JLabel();
        namenotvalidlabel = new javax.swing.JLabel();
        nicInvalidLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Current Owner");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Permit No");

        ownerText.setEditable(false);
        ownerText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ownerTextActionPerformed(evt);
            }
        });

        permit_number_combo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                permit_number_comboItemStateChanged(evt);
            }
        });
        permit_number_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                permit_number_comboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(permit_number_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ownerText, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(299, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(permit_number_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(ownerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        childrenCountPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        NumberOfMarriedChildren.setText("No. of married children:");

        NoOfUnmarriedChildren.setText("No. of  unmarried children:");

        marriedChildrenCountSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                marriedChildrenCountSpinnerStateChanged(evt);
            }
        });
        marriedChildrenCountSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                marriedChildrenCountSpinnerKeyReleased(evt);
            }
        });

        unmarriedChildrenCountSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                unmarriedChildrenCountSpinnerStateChanged(evt);
            }
        });
        unmarriedChildrenCountSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                unmarriedChildrenCountSpinnerKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout childrenCountPanelLayout = new javax.swing.GroupLayout(childrenCountPanel);
        childrenCountPanel.setLayout(childrenCountPanelLayout);
        childrenCountPanelLayout.setHorizontalGroup(
            childrenCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(childrenCountPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(childrenCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NoOfUnmarriedChildren, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(NumberOfMarriedChildren, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(childrenCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(marriedChildrenCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unmarriedChildrenCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        childrenCountPanelLayout.setVerticalGroup(
            childrenCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(childrenCountPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(childrenCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumberOfMarriedChildren)
                    .addComponent(marriedChildrenCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(childrenCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NoOfUnmarriedChildren)
                    .addComponent(unmarriedChildrenCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        AnnualIncome.setText("Estimated Annual Income: Rs.");

        annualIncomeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                annualIncomeTextKeyReleased(evt);
            }
        });

        incomenotvalidlabel.setForeground(new java.awt.Color(204, 0, 0));
        incomenotvalidlabel.setText("Not Valid");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AnnualIncome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(annualIncomeText, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(incomenotvalidlabel)
                .addGap(8, 8, 8))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AnnualIncome)
                    .addComponent(annualIncomeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(incomenotvalidlabel))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        add_button.setText("Add");
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });
        add_button.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                add_buttonKeyReleased(evt);
            }
        });

        cancel_button.setText("Cancel");
        cancel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_buttonActionPerformed(evt);
            }
        });
        cancel_button.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cancel_buttonKeyReleased(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        nic_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nic_textKeyReleased(evt);
            }
        });

        owner_name_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                owner_name_textKeyReleased(evt);
            }
        });

        telephoneText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                telephoneTextKeyReleased(evt);
            }
        });

        address_text.setColumns(20);
        address_text.setRows(5);
        address_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                address_textKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(address_text);

        addresslabel.setText("Address:");

        PhoneNo.setText("Phone Number:");

        namelabel.setText("Name:");

        niclabel.setText("NIC:");

        Birthday.setText("Birthday:");

        Status.setText("Status:");

        marriedStatusRButton.setText("Married");
        marriedStatusRButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                marriedStatusRButtonStateChanged(evt);
            }
        });
        marriedStatusRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marriedStatusRButtonActionPerformed(evt);
            }
        });
        marriedStatusRButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                marriedStatusRButtonKeyReleased(evt);
            }
        });

        singleStatusRButton.setText("Single");
        singleStatusRButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                singleStatusRButtonKeyReleased(evt);
            }
        });

        Generate.setText("Generate");
        Generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateActionPerformed(evt);
            }
        });
        Generate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GenerateKeyReleased(evt);
            }
        });

        phonenumnotvalidlabel.setForeground(new java.awt.Color(255, 0, 0));
        phonenumnotvalidlabel.setText("Phone number is invalid");

        namenotvalidlabel.setForeground(new java.awt.Color(255, 0, 0));
        namenotvalidlabel.setText("name is invalid");

        nicInvalidLabel.setForeground(new java.awt.Color(255, 0, 0));
        nicInvalidLabel.setText("NIC is invalid");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PhoneNo)
                    .addComponent(addresslabel)
                    .addComponent(Birthday, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Status)
                    .addComponent(namelabel)
                    .addComponent(niclabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(nic_text, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nicInvalidLabel))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(owner_name_text, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(namenotvalidlabel))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(telephoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(phonenumnotvalidlabel))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(marriedStatusRButton)
                        .addGap(18, 18, 18)
                        .addComponent(singleStatusRButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(DOBText, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Generate))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nic_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nicInvalidLabel)
                    .addComponent(niclabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namelabel)
                    .addComponent(owner_name_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namenotvalidlabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telephoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PhoneNo)
                    .addComponent(phonenumnotvalidlabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addresslabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Birthday)
                    .addComponent(DOBText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Generate))
                .addGap(1, 1, 1)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Status)
                    .addComponent(marriedStatusRButton)
                    .addComponent(singleStatusRButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(cancel_button)
                        .addGap(57, 57, 57))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(childrenCountPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(childrenCountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add_button)
                            .addComponent(cancel_button)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void telephoneTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telephoneTextKeyReleased
        // TODO add your handling code here:
        EnableAddButton();
        phonenumnotvalidlabel.setVisible(false);
        String newtext=PatternChecker.checkTelNum(telephoneText.getText());
        telephoneText.setText(newtext);
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if (telephoneText.getText().length()==10){
                address_text.requestFocus();
            }
            else{
                phonenumnotvalidlabel.setVisible(true);
            }}
            else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
                address_text.requestFocus();
            }
            else if(evt.getKeyCode()==KeyEvent.VK_UP){
                owner_name_text.requestFocus();
            }
    }//GEN-LAST:event_telephoneTextKeyReleased

    private void birthdayChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthdayChooser1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_birthdayChooser1ActionPerformed

    private void birthdayChooser1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_birthdayChooser1KeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){

            marriedStatusRButton.requestFocus();
        }

        else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            marriedStatusRButton.requestFocus();
        }
        else if(evt.getKeyCode()==KeyEvent.VK_UP){
            address_text.requestFocus();

        }
    }//GEN-LAST:event_birthdayChooser1KeyReleased

    private void marriedStatusRButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_marriedStatusRButtonStateChanged
        // TODO add your handling code here:
        EnableAddButton();
    }//GEN-LAST:event_marriedStatusRButtonStateChanged

    private void marriedStatusRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marriedStatusRButtonActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_marriedStatusRButtonActionPerformed

    private void marriedStatusRButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marriedStatusRButtonKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){

            marriedStatusRButton.isSelected();
        }

        else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            marriedChildrenCountSpinner.requestFocus();
        }
        else if(evt.getKeyCode()==KeyEvent.VK_UP){
            DOBText.requestFocus();

        }

        else if(evt.getKeyCode()==KeyEvent.VK_RIGHT){
            singleStatusRButton.requestFocus();

        }
    }//GEN-LAST:event_marriedStatusRButtonKeyReleased

    private void singleStatusRButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_singleStatusRButtonKeyReleased
        // TODO add your handling code here:
        EnableAddButton();
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){

            singleStatusRButton.isSelected();
        }

        else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            marriedChildrenCountSpinner.requestFocus();
        }
        else if(evt.getKeyCode()==KeyEvent.VK_UP){
            DOBText.requestFocus();

        }

        else if(evt.getKeyCode()==KeyEvent.VK_LEFT){
            marriedStatusRButton.requestFocus();

        }
    }//GEN-LAST:event_singleStatusRButtonKeyReleased

    private void marriedChildrenCountSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_marriedChildrenCountSpinnerStateChanged
        // TODO add your handling code here:
        GUIitemsValidator.limitminimumSpinnerValue(marriedChildrenCountSpinner,0);
    }//GEN-LAST:event_marriedChildrenCountSpinnerStateChanged

    private void marriedChildrenCountSpinnerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marriedChildrenCountSpinnerKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){

            unmarriedChildrenCountSpinner.requestFocus();
        }

        else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            GUIitemsValidator.decrementSpinnerValue(marriedChildrenCountSpinner);
        }
        else if(evt.getKeyCode()==KeyEvent.VK_UP){
            GUIitemsValidator.incermentSpinnerValue(marriedChildrenCountSpinner);

        }

    }//GEN-LAST:event_marriedChildrenCountSpinnerKeyReleased

    private void unmarriedChildrenCountSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_unmarriedChildrenCountSpinnerStateChanged
        // TODO add your handling code here:
        GUIitemsValidator.limitminimumSpinnerValue(unmarriedChildrenCountSpinner,0);
    }//GEN-LAST:event_unmarriedChildrenCountSpinnerStateChanged

    private void unmarriedChildrenCountSpinnerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unmarriedChildrenCountSpinnerKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){

           annualIncomeText.requestFocus();
        }

        else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            GUIitemsValidator.decrementSpinnerValue(unmarriedChildrenCountSpinner);
        }
        else if(evt.getKeyCode()==KeyEvent.VK_UP){
            GUIitemsValidator.incermentSpinnerValue(unmarriedChildrenCountSpinner);

        }
    }//GEN-LAST:event_unmarriedChildrenCountSpinnerKeyReleased

    private void annualIncomeTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_annualIncomeTextKeyReleased
        // TODO add your handling code here:
        EnableAddButton();
        incomenotvalidlabel.setVisible(false);
        String newtext=PatternChecker.checkDecimal(annualIncomeText.getText());
        annualIncomeText.setText(newtext);
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(PatternChecker.checkDecimaldirect(annualIncomeText.getText())){
                //addCurrentResidenceButton.requestFocus();
            }else{
                incomenotvalidlabel.setVisible(true);
            }
        }

        else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            //addCurrentResidenceButton.requestFocus();
        }
        else if(evt.getKeyCode()==KeyEvent.VK_UP){
            annualIncomeText.requestFocus();

        }
    }//GEN-LAST:event_annualIncomeTextKeyReleased
    public void EnableAddButton(){
        if(owner_name_text.getText().trim().length()!=0 && nic_text.getText().trim().length()!=0 &&address_text.getText().trim().length()!=0 && annualIncomeText.getText().trim().length()!=0 &&  telephoneText.getText().length()!=0 
           && (marriedStatusRButton.isSelected() || singleStatusRButton.isSelected())){
            add_button.setEnabled(true);
        }
        else{
            add_button.setEnabled(false);
        }
    }
    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed
       
        
        
        int isMarried = 1;
        String permitOwnerName = owner_name_text.getText();
        String nic = nic_text.getText();
        String telephoneNumber = telephoneText.getText();
        String address = address_text.getText();
        
        String DOB = DOBText.getText();
        
        if (singleStatusRButton.isSelected()) {
            isMarried = 0;
        }
        double annualincome=0;
        int marriedSons = Integer.parseInt(marriedChildrenCountSpinner.getValue().toString());
        int unmarriedSons = Integer.parseInt(unmarriedChildrenCountSpinner.getValue().toString());
        try{
        annualincome = Double.parseDouble(annualIncomeText.getText());}
        catch(Exception e){
          incomenotvalidlabel.setVisible(false);
        }
        if (!PatternChecker.checkStringdirect(owner_name_text.getText())) {
                       namenotvalidlabel.setVisible(true);
                   } else if (owner_name_text.getText().trim().length() == 0) {
                       namenotvalidlabel.setVisible(true);
                   } else if (!PatternChecker.checkNICdirect(nic_text.getText())) {
                       nicInvalidLabel.setVisible(true);
                   } else if (!PatternChecker.checkTelNumdirect(telephoneText.getText())) {
                       phonenumnotvalidlabel.setVisible(true);
                   } else if (telephoneText.getText().trim().length() == 0) {
                       phonenumnotvalidlabel.setVisible(true);
                   } else if (annualIncomeText.getText().trim().length() == 0) {
                       incomenotvalidlabel.setVisible(true);
                   } else if (!PatternChecker.checkDecimaldirect(annualIncomeText.getText())) {
                       annualIncomeText.setVisible(true);
                   } else if (DOBText.getText().trim().length() == 0) {
                       JOptionPane.showMessageDialog(rootPane, "Birthday Is Not Generated.");
                   }
        else{
             int cur_PermitOwnership=this.permit.getClient().getPermitOwnershipPosition();
        int cur_GrantOwnership=this.permit.getClient().getGrantOwnershipPosition();
            
        Client newclient = new Client(nic, permitOwnerName, DOB, telephoneNumber, address, annualincome,  cur_GrantOwnership,++cur_PermitOwnership, isMarried, marriedSons, unmarriedSons);
        permit.setClient(newclient);
        try {
            boolean changePermitOwnership = PermitController.changePermitOwnership(permit);
            if(changePermitOwnership){
                JOptionPane.showMessageDialog(this,"Ownership change successfully");
                this.setVisible(false);
            }else{
                JOptionPane.showMessageDialog(this, "Ownership doesnot channged");
            }
        } catch (ClassNotFoundException | SQLException | RemoteException ex) {

            this.setVisible(false);
        }
        
        }
        
    }//GEN-LAST:event_add_buttonActionPerformed

    
    
    
    private void permit_number_comboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_permit_number_comboItemStateChanged
          try {
            Permit searchPermit = PermitController.searchPermit(String.valueOf(permit_number_combo.getSelectedItem()));
            this.permit=searchPermit;
            if (searchPermit != null) {
                ownerText.setText(searchPermit.getClient().getClientName());
            }
        } catch (ClassNotFoundException | SQLException |RemoteException ex) {
            Logger.getLogger(ChangeNominateSuccessoOfPermitrForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_permit_number_comboItemStateChanged

    private void nic_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nic_textKeyReleased
        // TODO add your handling code here:
        EnableAddButton();
         nicInvalidLabel.setVisible(false);
       String newtext=PatternChecker.checkNIC(nic_text.getText());
       nic_text.setText(newtext);
       if(evt.getKeyCode()==KeyEvent.VK_ENTER){
           if(PatternChecker.checkNICdirect(nic_text.getText())){
               owner_name_text.requestFocus();
           }
           else{
               nicInvalidLabel.setVisible(true);
           }
       }
       else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
           owner_name_text.requestFocus();
       }
    }//GEN-LAST:event_nic_textKeyReleased

    private void owner_name_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_owner_name_textKeyReleased
        // TODO add your handling code here:
        EnableAddButton();
        namenotvalidlabel.setVisible(false);
       String newtext=PatternChecker.checkstring(owner_name_text.getText());
       owner_name_text.setText(newtext);
       if(evt.getKeyCode()==KeyEvent.VK_ENTER){
           if(PatternChecker.checkStringdirect(owner_name_text.getText())){
               telephoneText.requestFocus();
           }
           else{
               namenotvalidlabel.setVisible(true);
           }
       }
       else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
          telephoneText.requestFocus();
       }
       else if(evt.getKeyCode()==KeyEvent.VK_UP){
          nic_text.requestFocus();
       }
    }//GEN-LAST:event_owner_name_textKeyReleased

    private void address_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_address_textKeyReleased
        // TODO add your handling code here:
        EnableAddButton();
        if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            marriedStatusRButton.requestFocus();
        }
        else if(evt.getKeyCode()==KeyEvent.VK_UP){
            telephoneText.requestFocus();
        }
    }//GEN-LAST:event_address_textKeyReleased

    private void add_buttonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_add_buttonKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_RIGHT){
            cancel_button.requestFocus();
        }
        else if(evt.getKeyCode()==KeyEvent.VK_UP){
            annualIncomeText.requestFocus();

        }
    }//GEN-LAST:event_add_buttonKeyReleased

    private void cancel_buttonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cancel_buttonKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_LEFT){
            add_button.requestFocus();
        }
        else if(evt.getKeyCode()==KeyEvent.VK_UP){
            annualIncomeText.requestFocus();
        }
    }//GEN-LAST:event_cancel_buttonKeyReleased

    private void ownerTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ownerTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ownerTextActionPerformed

    private void permit_number_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_permit_number_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_permit_number_comboActionPerformed

    private void GenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateActionPerformed
        // TODO add your handling code here:
        if((!PatternChecker.checkNICdirect(nic_text.getText()))|| nic_text.getText().trim().length()==0){
            nicInvalidLabel.setVisible(true);
        }
        else{
            DOBText.setText(PatternChecker.getBirthday(nic_text.getText()));
        }
    }//GEN-LAST:event_GenerateActionPerformed

    private void GenerateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GenerateKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            marriedStatusRButton.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            address_text.requestFocus();
        }
    }//GEN-LAST:event_GenerateKeyReleased

    private void cancel_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancel_buttonActionPerformed
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePermitOwnershipForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePermitOwnershipForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePermitOwnershipForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePermitOwnershipForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChangePermitOwnershipForm dialog = new ChangePermitOwnershipForm();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AnnualIncome;
    private javax.swing.JLabel Birthday;
    private javax.swing.JTextField DOBText;
    private javax.swing.JButton Generate;
    private javax.swing.JLabel NoOfUnmarriedChildren;
    private javax.swing.JLabel NumberOfMarriedChildren;
    private javax.swing.JLabel PhoneNo;
    private javax.swing.JLabel Status;
    private javax.swing.JButton add_button;
    private javax.swing.JTextArea address_text;
    private javax.swing.JLabel addresslabel;
    private javax.swing.JTextField annualIncomeText;
    private javax.swing.JButton cancel_button;
    private javax.swing.JPanel childrenCountPanel;
    private javax.swing.JLabel incomenotvalidlabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner marriedChildrenCountSpinner;
    private javax.swing.JRadioButton marriedStatusRButton;
    private javax.swing.JLabel namelabel;
    private javax.swing.JLabel namenotvalidlabel;
    private javax.swing.JLabel nicInvalidLabel;
    private javax.swing.JTextField nic_text;
    private javax.swing.JLabel niclabel;
    private javax.swing.JTextField ownerText;
    private javax.swing.JTextField owner_name_text;
    private javax.swing.JComboBox permit_number_combo;
    private javax.swing.JLabel phonenumnotvalidlabel;
    private javax.swing.JRadioButton singleStatusRButton;
    private javax.swing.JTextField telephoneText;
    private javax.swing.JSpinner unmarriedChildrenCountSpinner;
    // End of variables declaration//GEN-END:variables
}
